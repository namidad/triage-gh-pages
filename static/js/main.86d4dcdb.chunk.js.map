{"version":3,"sources":["features/triage/TriageDashboard/CustomMarker.jsx","features/triage/TriageDashboard/TriageDashboard.jsx","features/nav/Menus/SignedInMenu.jsx","features/nav/NavBar/NavBar.jsx","features/home/HomePage.jsx","app/reducers/userActions.js","app/layout/App.jsx","serviceWorker.js","app/common/util/ScrollToTop.jsx","app/reducers/userReducer.js","app/reducers/victimsReducer.js","app/reducers/rootReducer.js","index.js"],"names":["CustomMarker","props","image","color","react_default","a","createElement","dist","Object","assign","onClick","onChangeId","icon","position","lat","lng","TriageDashboard","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","id","injury","green","yellow","red","black","victims","handleChangeId","e","setState","handleChecked","bool","defineProperty","inherits","createClass","key","value","_this2","markers","map","vic","TriageDashboard_CustomMarker","logged","className","Checkbox","onChange","label","defaultChecked","google","style","width","height","styles","mapStyles","initialCenter","zoom","Component","connect","user","isLogged","GoogleApiWrapper","apiKey","SignedInMenu","_ref","signOut","Menu","Item","Dropdown","text","NavBar","inverted","fixed","Container","as","Link","to","header","src","alt","Menus_SignedInMenu","handleSignOut","authenticated","isAdmin","HomePage","login","password","error","handleLogin","preventDefault","history","push","handleLoginChange","target","handlePasswordChange","Grid","textAlign","verticalAlign","Column","maxWidth","Header","Form","size","Segment","stacked","Input","fluid","iconPosition","placeholder","type","Button","Message","negative","store","dispatch","loginUser","getState","App","react_router","exact","path","component","render","nav_NavBar_NavBar","TriageDetailedPage","Boolean","window","location","hostname","match","ScrollToTop","prevProps","scrollTo","children","withRouter","initialState","userReducer","undefined","action","victimsReducer","objectSpread","rootReducer","combineReducers","createStore","applyMiddleware","thunk","rootEl","document","getElementById","ReactDOM","es","react_router_dom","util_ScrollToTop","layout_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86d4dcdb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Marker} from 'google-maps-react';\r\n\r\nconst CustomMarker = (props) => {\r\n    let image;\r\n    if(props.color === 'red'){\r\n      image = 'http://labs.google.com/ridefinder/images/mm_20_red.png';\r\n    } else if(props.color==='yellow'){\r\n      image = 'http://labs.google.com/ridefinder/images/mm_20_yellow.png';\r\n    } else if(props.color==='green'){\r\n      image = 'http://labs.google.com/ridefinder/images/mm_20_green.png';\r\n    } else if(props.color==='black'){\r\n      image = 'http://labs.google.com/ridefinder/images/mm_20_black.png';\r\n    }\r\n    return (\r\n        <Marker\r\n            onClick={props.onChangeId}\r\n            icon={image}\r\n            position={{lat: props.lat, lng: props.lng}}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CustomMarker;\r\n","import React, { Component } from 'react'\nimport {Map, GoogleApiWrapper} from 'google-maps-react';\nimport CustomMarker from './CustomMarker'\nimport { Checkbox } from 'semantic-ui-react'\nimport mapStyles from './mapStyles';\nimport { connect } from 'react-redux'\n\n\nexport class TriageDashboard extends Component {\n\n  state = {\n    id: 0,\n    color: \"\",\n    lat: 0,\n    lng: 0,\n    injury: \"\",\n    green: true,\n    yellow: true,\n    red: true,\n    black: true,\n    victims: this.props.victims,\n  }\n\n  componentWillMount(){\n    this.setState({\n      id: this.state.victims[0].id,\n      color: this.state.victims[0].color,\n      lat: this.state.victims[0].lat,\n      lng: this.state.victims[0].lng,\n      injury: this.state.victims[0].injury,\n    })\n  }\n\n  handleChangeId=(e)=>{\n        this.setState({\n          id: e.id,\n          color: this.state.victims[e.id].color,\n          lat: this.state.victims[e.id].lat,\n          lng: this.state.victims[e.id].lng,\n          injury: this.state.victims[e.id].injury,\n        })\n  }\n\n  handleChecked = (e) => {\n    let bool;\n    if(e===\"green\"){\n      bool=!this.state.green;\n    } else if (e===\"yellow\") {\n      bool=!this.state.yellow;\n    } else if (e===\"red\") {\n      bool=!this.state.red;\n    } else if (e===\"black\") {\n      bool=!this.state.black;\n    }\n    this.setState({\n      [e]: bool\n    })\n\n  }\n\n  render() {\n\n    let markers = this.state.victims.map(vic=>{\n      if(vic.color===\"green\"){\n        if(this.state.green){\n          return <CustomMarker color={vic.color} key={vic.id} lat={vic.lat} lng={vic.lng}  id={vic.id} onClick={this.handleChangeId}/>\n        }\n      } else if (vic.color===\"red\"){\n        if(this.state.red){\n          return <CustomMarker color={vic.color} key={vic.id} lat={vic.lat} lng={vic.lng}  id={vic.id} onClick={this.handleChangeId}/>\n        }\n      } else if (vic.color===\"black\") {\n        if(this.state.black){\n          return <CustomMarker color={vic.color} key={vic.id} lat={vic.lat} lng={vic.lng}  id={vic.id} onClick={this.handleChangeId}/>\n        }\n      } else if (vic.color===\"yellow\") {\n        if(this.state.yellow){\n          return <CustomMarker color={vic.color} key={vic.id} lat={vic.lat} lng={vic.lng}  id={vic.id} onClick={this.handleChangeId}/>\n        }\n      }\n\n      return null;\n    })\n\n    if(this.props.logged){\n      return (\n        <div className=\"mapContainer\">\n          <div className=\"injuredMap\">\n          <Checkbox onChange={ e => this.handleChecked(\"green\") }  label='Show green band' defaultChecked/>\n          <Checkbox onChange={ e => this.handleChecked(\"yellow\") } value=\"yellow\" label='Show yellow band' defaultChecked/>\n          <Checkbox onChange={ e => this.handleChecked(\"red\") } value=\"red\" label='Show red band' defaultChecked/>\n          <Checkbox onChange={ e => this.handleChecked(\"black\") } value=\"black\" label='Show black band' defaultChecked/>\n            <Map\n                google={this.props.google}\n                style={{width: '40%', height: '80%'}}\n                styles={mapStyles}\n\n                initialCenter={{\n                  lat: 51.108197,\n                  lng: 17.0326689\n                }}\n                zoom={18}\n              >\n                {markers}\n            </Map>\n          </div>\n\n          <div className=\"injuredForm\">\n\n            <h2>Poszkodowany nr: {this.state.id}</h2>\n            <h3>Kolor opaski: {this.state.color}</h3>\n            <h3>Lat: {this.state.lat}</h3>\n            <h3>Lng: {this.state.lng}</h3>\n            <h3>Obrazenia: {this.state.injury}</h3>\n           </div>\n        </div>\n\n      )\n    }\n\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    logged: state.user.isLogged,\n    victims: state.victims.victims,\n  }\n}\n\n\nexport default connect(mapStateToProps)(GoogleApiWrapper({\n  apiKey: (\"AIzaSyCblUbnkuTFlV_z1Uz0L5zowqVds8iIim0\")\n})(TriageDashboard))\n","import React from 'react'\nimport { Menu, Dropdown } from 'semantic-ui-react'\n\nconst SignedInMenu = ({signOut}) => {\n\n    return(\n            <Menu.Item position=\"right\">\n            <Dropdown.Item text=\"Przelacz\" icon=\"download\" />\n            <Dropdown.Item onClick={signOut} text=\"Sign Out\" icon=\"power\" />\n            </Menu.Item>\n    )\n}\n\nexport default SignedInMenu\n","import React, { Component } from \"react\";\nimport { Menu, Container} from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport SignedInMenu from \"../Menus/SignedInMenu\";\n\nimport { connect } from 'react-redux'\n\nclass NavBar extends Component {\n  render() {\n\n    return (\n      <Menu inverted fixed=\"top\">\n        <Container>\n          <Menu.Item as={Link} to='/triage-gh-pages/' header>\n            <img src=\"../../../public/assets/logo.png\" alt=\"logo\" />\n            Triage\n          </Menu.Item>\n          \n          <SignedInMenu signOut={this.handleSignOut} />\n        </Container>\n      </Menu>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated: state.user.isAdmin\n  }\n}\n\nexport default connect(mapStateToProps)(NavBar);\n","import React, {Component} from 'react'\nimport { Form, Grid, Button, Header, Segment, Message } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../app/reducers/userActions'\n\n\nclass HomePage extends Component {\n\n  state = {\n    login:'',\n    password:'',\n    logged: false,\n    error: false,\n    }\n\n\n  handleLogin = (e) => {\n    e.preventDefault();\n    this.props.history.push('/triage-gh-pages/triage');\n\n    // let check=false;\n    // this.state.users.forEach(user=>{\n    //     if(user.Login === this.state.login\n    //       && user.Password === this.state.password ){\n    //         check=true;\n    //         this.setState({\n    //           logged: true,\n    //         })\n    //         let loggedUser = user;\n    //         loggedUser.logged=true;\n    //         this.props.loginUser(loggedUser);\n    //         this.props.history.push('/videos');\n    //       }\n    // })\n\n    // if(!check){\n    //   this.setState({\n    //     error: true,\n    //   })\n    // } else {\n    //   this.setState({\n    //     error: false,\n    //   })\n    // }\n  }\n\n  handleLoginChange= (e)=>{\n      this.setState({\n        login: e.target.value\n      })\n  }\n\n  handlePasswordChange= (e) =>{\n   this.setState({\n     password: e.target.value\n   })\n }\n\n\n  render(){\n    if(!this.props.isLogged){\n      return (\n        <div>\n              <div className=\"ui inverted vertical masthead center aligned segment\">\n                <div className=\"ui text container\">\n                  <h1 className=\"ui inverted stackable header\">\n                    <img\n                      className=\"ui image massive\"\n                      src=\"../../../public/assets/logo.png\"\n                      alt=\"logo\"\n                    />\n                    <div className=\"content\">Triage</div>\n                  </h1>\n                  <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n          Login to your account\n          </Header>\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input onChange={this.handleLoginChange} fluid icon='user' iconPosition='left' placeholder='Login' />\n              <Form.Input\n                onChange={this.handlePasswordChange}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n              />\n\n              <Button onClick={this.handleLogin} color='teal' fluid size='large'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n\n\n          {this.state.error && <Message negative>\n            <Message.Header>Blad logowania</Message.Header>\n            <p>Bledny login lub haslo. Sprobuj ponownie!</p>\n          </Message> }\n\n        </Grid.Column>\n      </Grid>\n                </div>\n              </div>\n            </div>\n      )\n    } else\n      {\n      this.props.history.push('/videos');\n      return null;\n    }\n    }\n\n}\n\nconst mapStateToProps = (store) => {\n  // return {\n  //   isLogged: store.user.isLogged\n  // }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n   return {\n     loginUser: (login)=> dispatch(loginUser(login))\n   }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HomePage);\n","export const loginUser = (login) => {\n    return (dispatch, getState) => {\n        dispatch({type: 'LOGIN_USER', login})\n    }\n}","import React, { Component } from \"react\";\nimport TriageDetailedPage from '../../features/triage/TriageDashboard/TriageDashboard'\nimport NavBar from \"../../features/nav/NavBar/NavBar\";\nimport { Container } from \"semantic-ui-react\";\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path='/triage-gh-pages/' component={HomePage}/>\n        </Switch>\n\n        <Route\n        path=\"/triage-gh-pages/(.+)\"\n        render={() => (\n          <div>\n          <NavBar />\n          <Container className=\"main\">\n            <Switch>\n              <Route path='/triage-gh-pages/triage' component={TriageDetailedPage}/>\n            </Switch>\n          </Container>\n          </div>\n        )} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nclass ScrollToTop extends Component {\n\n    componentDidUpdate(prevProps){\n        if(this.props.location !== prevProps.location) {\n            window.scrollTo(0,0);\n        }\n    }\n\n    render() {\n        return this.props.children;\n    }\n\n}\n\nexport default withRouter(ScrollToTop);","const initialState = {\n    isLogged: true,\n}\n\nconst userReducer = (state = initialState, action) => {\n    switch(action.type){\n        case 'LOGIN_USER':\n            state={\n                isLogged: action.login.logged,\n            }\n            return state;\n        default:\n            return state;\n    }\n}\nexport default userReducer\n","const initialState = {\r\n  victims: [{\r\n    id: 0,\r\n    color: \"black\",\r\n    lat: 51.1089776,\r\n    lng: 17.0326689,\r\n    injury: \"head\",\r\n  },{\r\n    id: 1,\r\n    color: \"green\",\r\n    lat: 51.108197,\r\n    lng: 17.032295,\r\n    injury: \"hand\",\r\n\r\n  },{\r\n    id: 2,\r\n    color: \"red\",\r\n    lat: 51.109147,\r\n    lng: 17.031609,\r\n    injury: \"leg\",\r\n\r\n  },{\r\n    id: 3,\r\n    color: \"yellow\",\r\n    lat: 51.108877,\r\n    lng: 17.033186,\r\n    injury: \"eye\",\r\n  }],\r\n}\r\n\r\nconst victimsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_VICTIMS':\r\n            state={\r\n                ...state,\r\n                victims: action.victims,\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default victimsReducer\r\n","import { combineReducers } from 'redux'\nimport userReducer from './userReducer'\nimport victimsReducer from './victimsReducer';\n\nconst rootReducer = combineReducers({\n    victims: victimsReducer,\n    user: userReducer\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider} from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './app/layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport ScrollToTop from './app/common/util/ScrollToTop.jsx'\nimport rootReducer from './app/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\n\nconst store = createStore(rootReducer,applyMiddleware(thunk));\n\nconst rootEl = document.getElementById('root');\n\nlet render = () => {\n    ReactDOM.render(\n    <Provider store ={store}>\n        <BrowserRouter>\n            <ScrollToTop>\n                <App />\n            </ScrollToTop>\n        </BrowserRouter>\n    </Provider>,\n     rootEl);\n}\nif (module.hot){\n    module.hot.accept('./app/layout/App', ()=>{\n        setTimeout(render)\n    })\n}\n\nrender();\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}